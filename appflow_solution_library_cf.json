{
 "Parameters": {
  "CreateDatalakeBucket": {
   "Type": "String",
   "Default": "Use Existing Bucket",
   "AllowedValues": [
    "Create Bucket",
    "Use Existing Bucket"
   ],
   "Description": "Do you want to create a Data Lake Bucket, or use existing one?"
  },
  "DestinationBucketName": {
   "Type": "String",
   "AllowedPattern": "(?!(^xn--|.+-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$",
   "Description": "Name of the Data Lake Bucket"
  },
  "AthenaBucketName": {
   "Type": "String",
   "Description": "Name of the Athena Bucket"
  },
  "GlueDatabaseName": {
   "Type": "String",
   "Description": "Name of the Glue Database"
  },
  "CreateAthenaWorkgroup": {
   "Type": "String",
   "Default": "Do not create Work Group",
   "AllowedValues": [
    "Create Work Group",
    "Do not create Work Group"
   ],
   "Description": "Do you want to create a Athena Workgroup, or use existing one?"
  },
  "AthenaWGName": {
   "Type": "String",
   "Default": "None",
   "Description": "Name of the Athena Workgroup"
  },
  "CreateAthenaResultBucket": {
   "Type": "String",
   "Default": "Use Existing Bucket",
   "AllowedValues": [
    "Create Bucket",
    "Use Existing Bucket"
   ],
   "Description": "Do you want to create a Athena Result Bucket, or use existing one?"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "DestinationBucketcreate": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Ref": "DestinationBucketName"
    }
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/DestinationBucketcreate"
   },
   "Condition": "CreateDataLakeBucketCondition"
  },
  "AthenaBucketcreate": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": {
     "Ref": "AthenaBucketName"
    }
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/AthenaBucketcreate"
   },
   "Condition": "CreateAthenaBucketCondition"
  },
  "gluedb": {
   "Type": "AWS::Glue::Database",
   "Properties": {
    "CatalogId": {
     "Ref": "AWS::AccountId"
    },
    "DatabaseInput": {
     "Name": {
      "Ref": "GlueDatabaseName"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/gluedb"
   }
  },
  "appflows3policy5FBC87E5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:AbortMultipartUpload",
        "s3:GetBucketAcl",
        "s3:ListBucketMultipartUploads",
        "s3:ListMultipartUploadParts",
        "s3:PutObject",
        "s3:PutObjectAcl"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "DestinationBucketName"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "DestinationBucketName"
           }
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "appflows3policy5FBC87E5",
    "Roles": [
     {
      "Ref": "appflowservicerole81ACA211"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/appflow_s3_policy/Resource"
   }
  },
  "appflowgluepolicy1A8BA2FF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "glue:BatchCreatePartition",
        "glue:BatchDeletePartition",
        "glue:BatchDeleteTable",
        "glue:BatchDeleteTableVersion",
        "glue:BatchGetPartition",
        "glue:BatchUpdatePartition",
        "glue:CreateDatabase",
        "glue:CreatePartition",
        "glue:CreatePartitionIndex",
        "glue:CreateTable",
        "glue:DeleteDatabase",
        "glue:DeletePartition",
        "glue:DeletePartitionIndex",
        "glue:DeleteTable",
        "glue:DeleteTableVersion",
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetPartition",
        "glue:GetPartitionIndexes",
        "glue:GetPartitions",
        "glue:GetTable",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTables",
        "glue:TagResource",
        "glue:UntagResource",
        "glue:UpdateDatabase",
        "glue:UpdatePartition",
        "glue:UpdateTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:glue:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":catalog"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:glue:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":database/",
           {
            "Ref": "GlueDatabaseName"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:glue:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "GlueDatabaseName"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "appflowgluepolicy1A8BA2FF",
    "Roles": [
     {
      "Ref": "appflowservicerole81ACA211"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/appflow_glue_policy/Resource"
   }
  },
  "appflowservicerole81ACA211": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appflow.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/appflow_service_role/Resource"
   }
  },
  "appflowworkgroup": {
   "Type": "AWS::Athena::WorkGroup",
   "Properties": {
    "Name": {
     "Ref": "AthenaWGName"
    },
    "WorkGroupConfiguration": {
     "ResultConfiguration": {
      "OutputLocation": {
       "Fn::Join": [
        "",
        [
         "s3://",
         {
          "Ref": "AthenaBucketName"
         }
        ]
       ]
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/appflow_workgroup"
   },
   "Condition": "AthenaWGCondition"
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/yWMwQ6CMBBEv4V7WQUunsHEowQPHs1SVqlAS9ptDCH8uy2c3s5M3uaQX+Cc4M+lshvSUbWwPhjlIKq3rtHiRExWhP21ugLW0JZeDsTiQImONvEZPUGYrsjYhkYonGCtzajksj86rsaMFGPkJpB70hi1p7HDzRo/b3GtjO4UK6NjuHuePe8SOeOtDGK9cG/0qYAsgyL5OqVS6zWriaA5+AdKPjY61gAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "appflow-solution-sfdc/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CreateDataLakeBucketCondition": {
   "Fn::Equals": [
    {
     "Ref": "CreateDatalakeBucket"
    },
    "Create Bucket"
   ]
  },
  "CreateAthenaBucketCondition": {
   "Fn::Equals": [
    {
     "Ref": "CreateAthenaResultBucket"
    },
    "Create Bucket"
   ]
  },
  "AthenaWGCondition": {
   "Fn::Equals": [
    {
     "Ref": "CreateAthenaWorkgroup"
    },
    "Create Work Group"
   ]
  },
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Outputs": {
  "appflowroleoutput": {
   "Value": {
    "Ref": "appflowservicerole81ACA211"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}